

library(data.table)
olink.bat <- fread("olink_batch_number.dat")
olink.instance0 <- read.table("olink_instance_0.csv",sep=",",header=T) # npx table
olink.instance2 <- read.table("olink_instance_2.csv",sep=",",header=T)
olink.instance3 <- read.table("olink_instance_3.csv",sep=",",header=T)
olink.tec <- fread("match.tsv")
colnames(olink.tec)<-c("eid","num.prot.0","plate.prot.0","well.prot.0","num.prot.2","plate.prot.2","well.prot.2","num.prot.3","plate.prot.3","well.prot.3")

olink.instance0 <- merge(olink.instance0, olink.tec[, c("eid", "num.prot.0", "plate.prot.0", "well.prot.0")], by="eid")
olink.instance0 <- merge(olink.instance0, olink.bat, by.x="plate.prot.0", by.y="PlateID")

olink.instance2 <- merge(olink.instance2, olink.tec[, c("eid", "num.prot.2", "plate.prot.2", "well.prot.2")], by="eid")
olink.instance2 <- merge(olink.instance2, olink.bat, by.x="plate.prot.2", by.y="PlateID")

olink.instance3 <- merge(olink.instance3, olink.tec[, c("eid", "num.prot.3", "plate.prot.3", "well.prot.3")], by="eid")
olink.instance3 <- merge(olink.instance3, olink.bat, by.x="plate.prot.3", by.y="PlateID")

olink.instance0[,3:(ncol(olink.instance0)-3)]->prot1
olink.instance2[,3:(ncol(olink.instance0)-3)]->prot2
olink.instance3[,3:(ncol(olink.instance0)-3)]->prot3

intersect(intersect(colnames(prot1),colnames(prot2)),colnames(prot3))->inter
prot1[,match(inter,colnames(prot1))]->prot1m
prot2[,match(inter,colnames(prot2))]->prot2m
prot3[,match(inter,colnames(prot3))]->prot3m


cbind(olink.instance0[,1:2],prot1m,olink.instance0[,(ncol(olink.instance0)-2):ncol(olink.instance0)])->prot1s
cbind(olink.instance2[,1:2],prot2m,olink.instance2[,(ncol(olink.instance2)-2):ncol(olink.instance2)])->prot2s
cbind(olink.instance3[,1:2],prot3m,olink.instance3[,(ncol(olink.instance3)-2):ncol(olink.instance3)])->prot3s

colnames(prot1s)->colnames(prot2s)
colnames(prot1s)->colnames(prot3s)
rbind(prot1s,prot2s,prot3s)->protall

protall[,3:(ncol(protall)-3)]->protsmall






##### this does NA for those below LOD

fread("/well/todd/users/xnc303/ukbb/olink/olink_assay_warning.dat",header=T)->warning
fread("/well/todd/users/xnc303/ukbb/olink/olink_limit_of_detection.dat",header=T)->lod
paste(lod$PlateID,lod$Assay,sep="_")->lodname
paste(warning$PlateID,warning$Assay,sep="_")->pass
protsmall->protsmall3
for(i in 1:ncol(protsmall)){
paste(protall[,"plate.prot.0"],toupper(colnames(protsmall)[i]),sep="_")->plateassay
match(plateassay,pass)->idx
protsmall3[which(is.na(idx)==T),i]<-"NA"
match(plateassay,lodname)->idx2
lod$LOD[idx2]->cutoff
protsmall3[which(as.numeric(protsmall3[,i])<cutoff),i]<-"NA"
print(i)}

read.table("/well/todd/users/xnc303/ukbb/imputed/eur_hla_prot.fam")->fam2
protsmall3[match(fam2[,2],protall[,2]),]->protsmall4

navec<-vector()
for(i in 1:ncol(protsmall4)){
length(which(is.na(protsmall4[,i])==T))->navec[i]
}

navec2<-vector()
for(i in 1:ncol(protsmall4)){
length(which(protsmall4[,i]=="NA"))->navec2[i]
}

navec+navec2->navec3
protsmall4[,which(navec3<(nrow(protsmall4)*0.2))]->protsmall5

cbind(fam2[,1:2],protsmall5)->protsmall6
colnames(protsmall6)[1:2]<-c("FID","IID")
write.table(protsmall6,file="pheno_lodna",col.names=T,row.names=F,quote=F)


#### this does LOD for those below LOD


protall[,3:(ncol(protall)-3)]->protsmall

paste(lod$PlateID,lod$Assay,sep="_")->lodname
paste(warning$PlateID,warning$Assay,sep="_")->pass
protsmall->protsmall3
for(i in 1:ncol(protsmall)){
paste(protall[,"plate.prot.0"],toupper(colnames(protsmall)[i]),sep="_")->plateassay
match(plateassay,pass)->idx
protsmall3[which(is.na(idx)==T),i]<-"NA"
match(plateassay,lodname)->idx2
lod$LOD[idx2]->cutoff
protsmall3[which(as.numeric(protsmall3[,i])<cutoff),i]<-cutoff[which(as.numeric(protsmall3[,i])<cutoff)]
print(i)}

protsmall3[match(fam2[,2],protall[,2]),]->protsmall4

#### check how much NA

navec<-vector()
for(i in 1:ncol(protsmall4)){
length(which(is.na(protsmall4[,i])==T))->navec[i]
}

navec2<-vector()
for(i in 1:ncol(protsmall4)){
length(which(protsmall4[,i]=="NA"))->navec2[i]
}

navec+navec2->navec3

protsmall4[,which(navec3<(nrow(protsmall4)*0.2))]->protsmall5

cbind(fam2[,1:2],protsmall5)->protsmall6
colnames(protsmall6)[1:2]<-c("FID","IID")
write.table(protsmall6,file="pheno",col.names=T,row.names=F,quote=F)

protsmall5->protscram
for(i in 1:ncol(protsmall5)){
sample(protsmall5[,i])->protscram[,i]
print(i)
}
cbind(fam2[,1:2],protscram)->protscram2
colnames(protsmall6)->colnames(protscram2)
write.table(protscram2,file="pheno_scramble",col.names=T,row.names=F,quote=F)
